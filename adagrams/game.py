from random import randint

LETTERS = {
    "A" : 9,
    "B" : 2,
    "C" : 2,
    "D" : 4,
    "E" : 12,	
    "F" : 2,
    "G" : 3,
    "H" : 2,
    "I" : 9,
    "J" : 1,
    "K" : 1,
    "L" : 4,
    "M" : 2,
    "N" : 6,
    "O" : 8,
    "P" : 2,
    "Q" : 1,
    "R" : 6,
    "S" : 4,
    "T" : 6,
    "U" : 4,
    "V" : 2,
    "W" : 2,
    "X" : 1,
    "Y" : 2,
    "Z" : 1
}

LETTER_SCORES = {
    1: ["A", "E", "I", "O", "U", "L", "N", "R", "S", "T"],
    2: ["D", "G"],
    3: ["B", "C", "M", "P"],
    4: ["F", "H", "V", "W", "Y"],
    5: ["K"],
    8: ["J", "X"],
    10: ["Q", "Z"],
}

def return_letter(letter_dict):
    """ 
    Returns a random letter, taking into account 
    the frequency of letters in letter_dict
    
    args:
        letter_dict - a new dictionary of letters
    """
    letter = chr(randint(65,90))
    if letter_dict[letter] > 0:
        letter_dict[letter] -= 1
        return letter
    else:
        return return_letter(letter_dict)

def draw_letters():
    """
    Returns a list of 10 random letters generated by
    return_letter
    """
    # copying the dict so it doesn't run of the same one each time
    letter_dict = LETTERS.copy()

    new_letters = [return_letter(letter_dict) for _ in range(10)]

    return new_letters

def uses_available_letters(word, letter_bank):
    """
    Returns a boolean based on whether the letter_bank
    has the letters to make the word

    args:
        word - a word to search 
        letter_bank - a list of 10 letters
    """
    pass

def score_word(word):
    """
    Returns a score of a word

    args:
        word - a word to score
    """
    pass

def get_highest_word_score(word_list):
    """
    
    """
    pass